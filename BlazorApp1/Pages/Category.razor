@page "/categories"
@using BlazorApp1.ServiceInterfaces.Internal
@using BlazorApp1.DTOs
@using Newtonsoft.Json

<h3>Welcome to the Category section</h3>

<a href="@($"categorydetails")" class="btn btn-success">New Item</a>

<br />

<table class="table">
    <thead>
        <tr>
            <th>ID</th>
            <th>Name</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach(var item in modelVms)
        {
            <tr>
                <td> @item.Id</td>
                <td> @item.ItemName</td>
                <td><a href="@($"categorydetails/{item.Id}")" class="btn btn-success">Edit</a></td>
            </tr>
        }
    </tbody>
</table>


@code {

    [Inject]
    private IDataService _dataService { get; set; }

    private IEnumerable<CategoryDTO> modelVms { get; set; } = new List<CategoryDTO>();


    protected async override Task OnInitializedAsync()
    {
       
        var message = "Could not get response from API";

        try
        {
            var apiResponse = await _dataService.CategoryItems.Get();

            if (apiResponse != null)
            {
                if (apiResponse.StatusCode == 200)
                {
                    modelVms = apiResponse.Data != null ?
                    JsonConvert.DeserializeObject<List<CategoryDTO>>(apiResponse.Data.ToString()) : null;
                    message = $"Message: {apiResponse.Message}<br/>Description: {apiResponse.Description}";
                     // _toastr.AddSuccessToastMessage(message);
                }
                else
                {
                    message = $"Title: {apiResponse.Title}<br/>Description: {apiResponse.Description}";
                     // _toastr.AddInfoToastMessage(message);
                }
            }
            else
            {
                 // _toastr.AddInfoToastMessage(message);
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);            
            throw ex;
        }
    }

}
